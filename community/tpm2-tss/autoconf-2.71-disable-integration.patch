diff -urN tpm2-tss-3.0.3.orig/configure.ac tpm2-tss-3.0.3/configure.ac
--- tpm2-tss-3.0.3.orig/configure.ac	2021-05-23 11:00:20.919719448 -0600
+++ tpm2-tss-3.0.3/configure.ac	2021-05-23 11:00:39.919776536 -0600
@@ -274,61 +274,7 @@
 #
 # enable integration tests and check for simulator binary
 #
-AC_ARG_ENABLE([integration],
-    [AS_HELP_STRING([--enable-integration],
-        [build and execute integration tests])],,
-    [enable_integration=no])
-AS_IF([test "x$enable_integration" = "xyes"],
-     AS_IF([test "$HOSTOS" = "Linux"],
-           [ERROR_IF_NO_PROG([ss])],
-           [ERROR_IF_NO_PROG([sockstat])])
-       ERROR_IF_NO_PROG([echo])
-       ERROR_IF_NO_PROG([kill])
-       ERROR_IF_NO_PROG([stdbuf])
-       ERROR_IF_NO_PROG([sleep])
-       ERROR_IF_NO_PROG([cat])
-       ERROR_IF_NO_PROG([realpath])
-       ERROR_IF_NO_PROG([dirname])
-       ERROR_IF_NO_PROG([basename])
-       ERROR_IF_NO_PROG([mktemp])
-       ERROR_IF_NO_PROG([od])
-       ERROR_IF_NO_PROG([awk])
-       ERROR_IF_NO_PROG([expr])
-       ERROR_IF_NO_PROG([grep])
-       ERROR_IF_NO_PROG([env])
-       ERROR_IF_NO_PROG([rm])
-       AS_IF([test "x$with_crypto" != xossl -o "x$enable_esys" != xyes],
-           PKG_CHECK_MODULES([LIBCRYPTO],[libcrypto]))
-       AC_CHECK_HEADER(uthash.h, [], [AC_MSG_ERROR([Can not find uthash.h. Please install uthash-dev])])
-
-       # choose tcti for testing and look for TPM simulator binary
-       integration_tcti="none"
-       integration_args=""
-       AS_IF([test "x$with_device_set" = xyes],
-             [# use device if --with-device was passed
-              integration_tcti=device
-              integration_args="--device=$with_device"
-              AC_MSG_WARN([Using physical TPM for integration testing])])
-       AS_IF([test "x$integration_tcti" = "xnone" && test "x$enable_tcti_swtpm" != xyes && test "x$enable_tcti_mssim" != xyes],
-             [AC_MSG_ERROR([No suitable TCTI for testing enabled. Please use option --enable-tcti-swtpm (recommended) or --enable-tcti-mssim (fallback) to enable a suitable TCTI or disable testing with --disable-integration.])])
-       AS_IF([test "x$integration_tcti" = "xnone" && test "x$enable_tcti_swtpm" = "xyes"],
-             [# check for swtpm binary
-              AC_CHECK_PROG([result_swtpm], [swtpm], [yes], [no])
-              AS_IF([test "x$result_swtpm" = "xyes"],
-                    [integration_tcti=swtpm],
-                    [AC_MSG_WARN([Executable swtpm not found in PATH.])])])
-       AS_IF([test "x$integration_tcti" = "xnone" && test "x$enable_tcti_mssim" = "xyes"],
-             [# check for mssim binary
-              AC_MSG_NOTICE([Falling back to testing with tcti-mssim.])
-              AC_CHECK_PROG([result_tpm_server], [tpm_server], [yes], [no])
-              AS_IF([test "x$result_tpm_server" = "xyes"],
-                    [integration_tcti=mssim],
-                    [AC_MSG_WARN([Executable tpm_server not found in PATH (fallback)])])])
-       AS_IF([test "x$integration_tcti" = "xnone"],
-             [AC_MSG_ERROR([No simulator executable found in PATH for testing TCTI.])])
-       AC_SUBST([INTEGRATION_TCTI], [$integration_tcti])
-       AC_SUBST([INTEGRATION_ARGS], [$integration_args])
-       AC_SUBST([ENABLE_INTEGRATION], [$enable_integration]))
+enable_integration=no
 AM_CONDITIONAL([ENABLE_INTEGRATION],[test "x$enable_integration" = "xyes"])
 #
 # sanitizer compiler flags
